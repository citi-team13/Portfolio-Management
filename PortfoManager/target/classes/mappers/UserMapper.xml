<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.citi.portfolio.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.citi.portfolio.model.User" >
    <id column="user_id" property="userId" jdbcType="CHAR" />
    <result column="user_name" property="userName" jdbcType="CHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="CHAR" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, user_pwd, user_type, phone, email
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.citi.portfolio.model.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where user_id = #{userId,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.citi.portfolio.model.UserExample" >
    delete from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.citi.portfolio.model.User" >
    insert into user (user_id, user_name, user_pwd, 
      user_type, phone, email)
    values (#{userId,jdbcType=CHAR}, #{userName,jdbcType=CHAR}, #{userPwd,jdbcType=CHAR}, 
      #{userType,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{email,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.citi.portfolio.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPwd != null" >
        user_pwd,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=CHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=CHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.citi.portfolio.model.UserExample" resultType="java.lang.Integer" >
    select count(*) from user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryUserInfoByUserPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where phone = #{phone,jdbcType=CHAR}
  </select>
  <select id="listAllFundManager" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where user_type = 1
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=CHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=CHAR},
      </if>
      <if test="record.userPwd != null" >
        user_pwd = #{record.userPwd,jdbcType=CHAR},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user
    set user_id = #{record.userId,jdbcType=CHAR},
      user_name = #{record.userName,jdbcType=CHAR},
      user_pwd = #{record.userPwd,jdbcType=CHAR},
      user_type = #{record.userType,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=CHAR},
      email = #{record.email,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.citi.portfolio.model.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=CHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=CHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.citi.portfolio.model.User" >
    update user
    set user_name = #{userName,jdbcType=CHAR},
      user_pwd = #{userPwd,jdbcType=CHAR},
      user_type = #{userType,jdbcType=INTEGER},
      phone = #{phone,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR}
    where user_id = #{userId,jdbcType=CHAR}
  </update>
</mapper>